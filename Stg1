Here's a Terraform configuration to create an Azure Storage Account and Container with Version-Level Immutability support:


```
terraform
# Configure Azure Provider
provider "azurerm" {
  version = "2.94.0"
}

# Create Resource Group
resource "azurerm_resource_group" "example" {
  name     = "example-resource-group"
  location = "West US"
}

# Create Storage Account
resource "azurerm_storage_account" "example" {
  name                     = "examplestorageaccount"
  resource_group_name      = azurerm_resource_group.example.name
  location                 = azurerm_resource_group.example.location
  account_tier             = "Standard"
  account_replication_type = "LRS"

  # Enable Soft Delete
  enable_soft_delete = true

  # Enable Versioning
  versioning {
    enabled = true
  }
}

# Create Storage Container
resource "azurerm_storage_container" "example" {
  name                     = "example-container"
  storage_account_name  = azurerm_storage_account.example.name
  container_access_type = "private"
}

# Enable Version-Level Immutability
resource "azurerm_storage_container_immutability_policy" "example" {
  container_name        = azurerm_storage_container.example.name
  storage_account_name = azurerm_storage_account.example.name

  # Set Immutability Policy
  immutability_policy {
    mode = "VersionLevel"

    # Set Time-based retention
    retention {
      days = 30
    }
  }
}
```


This configuration:


1. Creates a Resource Group.
2. Creates a Storage Account with Soft Delete and Versioning enabled.
3. Creates a Storage Container.
4. Enables Version-Level Immutability on the Container.


Note:


- Replace `West US` with your desired location.
- Update `example-resource-group` and `examplestorageaccount` with your desired names.
- Adjust the `days` value in the `retention` block to set the desired retention period.


Run `terraform apply` to create the resources.


Please ensure you have the necessary permissions and credentials set up to use Terraform with Azure.


*Important:*


- Version-Level Immutability requires Azure Storage Account's `HierarchicalNamespace` feature to be enabled.
- This feature is only available for Storage Accounts created after October 2020.
- If your Storage Account was created before October 2020, you'll need to create a new Storage Account or migrate to a newer account.
